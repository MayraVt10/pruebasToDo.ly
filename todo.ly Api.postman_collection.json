{
	"info": {
		"_postman_id": "0db966a7-c102-4375-b866-48cb7f9d2f3e",
		"name": "todo.ly Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30694093"
	},
	"item": [
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Content\");\r",
							"\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{pass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "<ProjectObject>\r\n  <Content>Proyecto prueba</Content>\r\n  <Icon>6</Icon>\r\n</ProjectObject>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}api/projects.xml",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"projects.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Field types are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Id).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.Content).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.ItemsCount).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.Icon).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.Collapsed).to.be.a(\"boolean\");\r",
							"});\r",
							"pm.test(\"Children field is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Children).to.be.empty;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{pass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}api/projects/{{project_id}}.json",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"projects",
						"{{project_id}}.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "update project by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains required fields\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Id\");\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Content\");\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Icon\");\r",
							"});\r",
							"pm.test(\"Icon field is updated\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson.ProjectObject.Icon).to.equal(\"4\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response can be parsed as XML\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{pass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<ProjectObject>  \r\n  <Icon>8</Icon>\r\n</ProjectObject>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}api/projects/{{project_id}}.xml",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"projects",
						"{{project_id}}.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete prject by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains required fields\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Id\");\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Content\");\r",
							"    pm.expect(responseJson.ProjectObject).to.have.property(\"Icon\");\r",
							"});\r",
							"pm.test(\"Deleted project matches request\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson.ProjectObject.Id).to.equal(\"4393547\"); // Reemplaza con Nombre esperado\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});\r",
							"pm.test(\"Content-Type is application/xml\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
							"});\r",
							"pm.test(\"Children field is empty\", function () {\r",
							"    var responseJson = xml2Json(pm.response.text());\r",
							"    pm.expect(responseJson.ProjectObject.Children).to.be.empty;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{pass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}api/projects/4393547.xml",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"projects",
						"4393547.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "get items of a project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is in JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Items contain required fields\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    var firstItem = responseJson[0];\r",
							"    pm.expect(firstItem).to.have.property(\"Id\");\r",
							"    pm.expect(firstItem).to.have.property(\"Content\");\r",
							"    pm.expect(firstItem).to.have.property(\"ItemType\");\r",
							"    pm.expect(firstItem).to.have.property(\"Checked\");\r",
							"    pm.expect(firstItem).to.have.property(\"Priority\");\r",
							"});\r",
							"pm.test(\"Items with children are valid\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    responseJson.forEach(function (item) {\r",
							"        if (item.Children && item.Children.length > 0) {\r",
							"            pm.expect(item.Children).to.be.an(\"array\");\r",
							"            pm.expect(item.Children[0]).to.have.property(\"ParentId\", item.Id);\r",
							"        }\r",
							"    });\r",
							"});\r",
							"pm.test(\"All items have priority 4\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    responseJson.forEach(function (item) {\r",
							"        pm.expect(item.Priority).to.equal(4);\r",
							"    });\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{pass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}api/projects/4393552/Items.json",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"projects",
						"4393552",
						"Items.json"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{pass}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "testYamel10@gmail.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "project_id",
			"value": ""
		}
	]
}